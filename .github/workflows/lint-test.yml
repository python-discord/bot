name: Lint & Test

on:
  workflow_call

jobs:
  lint-test:
    runs-on: ubuntu-latest
    env:
      # Dummy values for required bot environment variables
      BOT_API_KEY: foo
      BOT_SENTRY_DSN: blah
      BOT_TOKEN: bar
      REDDIT_CLIENT_ID: spam
      REDDIT_SECRET: ham
      REDIS_PASSWORD: ''

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          activate-environment: true

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run pre-commit hooks
        run: SKIP=ruff pre-commit run --all-files

      # Run `ruff` using github formatting to enable automatic inline annotations.
      - name: Run ruff
        run: "ruff check --output-format=github ."

      - name: Run tests and generate coverage report
        run: pytest -n auto --cov -q
        env:
          # Use "sys.monitoring" based coverage backend for better speed (see #3075)
          COVERAGE_CORE: sysmon

      # Prepare the Pull Request Payload artifact. If this fails, we
      # we fail silently using the `continue-on-error` option. It's
      # nice if this succeeds, but if it fails for any reason, it
      # does not mean that our lint-test checks failed.
      - name: Prepare Pull Request Payload artifact
        id: prepare-artifact
        if: always() && github.event_name == 'pull_request'
        continue-on-error: true
        run: cat $GITHUB_EVENT_PATH | jq '.pull_request' > pull_request_payload.json

      # This only makes sense if the previous step succeeded. To
      # get the original outcome of the previous step before the
      # `continue-on-error` conclusion is applied, we use the
      # `.outcome` value. This step also fails silently.
      - name: Upload a Build Artifact
        if: always() && steps.prepare-artifact.outcome == 'success'
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: pull-request-payload
          path: pull_request_payload.json
